public class Test {

    private static Object lock = new Object();
    public static boolean flag = true; 
    
	public static void main(String[] args) {
		new Thread(new EvenPrint(lock)).start();
		new Thread(new OddPrint(lock)).start();
	}

}
    class OddPrint implements Runnable {

        private Object lock = null;

        public OddPrint(Object lock) {
            this.lock = lock;
        }

        public void run() {

            for (int i = 1; i <= 99; i = i + 2) {
                synchronized (lock) {
                    while (!Test.flag) {
                        try {
                            lock.wait();
                        } catch (InterruptedException e) {
                            System.out.println("Error in Thread 1: "
                                    + e.getMessage());
                        }
                    }
                    System.out.println("Thread 1: The number is '" + i + "'");
                    Test.flag = false;
                    lock.notifyAll();
                }

            }
        }
    }
 
    class EvenPrint implements Runnable {

        private Object lock = null;

        public EvenPrint(Object lock) {
            this.lock = lock;
        }

        public void run() {

            for (int i = 2; i <= 100; i = i + 2) {
                synchronized (lock) {
                    while (Test.flag) {
                        try {
                            lock.wait();
                        } catch (InterruptedException e) {
                            System.out.println("Error in Thread 2: "
                                    + e.getMessage());
                        }
                    }
                    System.out.println("Thread 2: The number is '" + i + "'");
                    Test.flag = true;
                    lock.notifyAll();
                }

            }
        }

    } 
